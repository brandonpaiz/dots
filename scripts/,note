#!/usr/bin/env bash

NOTE_SCRIPTS_DIR=$(dirname $0)/note-scripts  # Find supporting scripts
source $NOTE_SCRIPTS_DIR/note-globals        # Import global variables

script=note-$1                               # The script to run (note-ls, etc)
cmd=$NOTE_SCRIPTS_DIR/$script                # The full command

# If no input, display help
if [ -z "$1" ]; then
    printf "Usage: ,note <command> [<args>]\n\n"
    printf "Commands:\n"
    printf "   help   \t (coming soon) List availible subcommands and in depth explanations\n"
    printf "   ls     \t List and search sections in note file\n"
    printf "   append \t Append new formatted note to note file\n"
    exit 1
fi

# Run script if it exists
if [ -f "$cmd" ]; then
    shift        # Pass on other args to called script
    source $cmd  # Run the command here so it can access imported global variables
    status=$?    # Exit status is exit status of command
    exit $status
fi

# Check mappings

target_macro=$1
search_string=$2
declare -a macros
macros=(
    'people #78386e ^\w'
    'todo   #0a386d ^\w'
    'date   #af0ec4 ^\d\{4\}'
)
for macro in "${macros[@]}"; do
    macro_name=$(cut -d ' ' -f 1 <<< $macro)

    if [ "$macro_name" = "$target_macro" ]; then
        macro_section=$(cut -d ' ' -f 2 <<< $macro)
        macro_subsection_regex=$(cut -d ' ' -f 3 <<< $macro)
        source $NOTE_SCRIPTS_DIR/note-ls "$macro_section" | ,spangrabber "$macro_subsection_regex" "$search_string"
        status=$?
        exit $status
    fi

done


echo "Could not find command or macro \"$1\""
exit 1
