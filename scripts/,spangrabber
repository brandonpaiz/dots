#!/bin/bash

#FEAT: also accept input from file?
#TODO: for some reason, text=$(cat) doesn't seem to store new lines at the end
#      of the file. So if you're getting the last section AND applying offsets,
#      it could cut off the bottom
#TODO: When picking between two spans, if one span is a subset of another, that
#      span can not be selected. Exact matches should show the span

print_usage() {
    echo "Usage: ,spangrabber [section definition regex] [selected section regex] [begin-offset] [end-offset]"
}

#-------------------------------------------------------------------------------
# Exit if not piped input https://unix.stackexchange.com/a/388462
if [ -t 0  ]; then
    print_usage
    exit 1
fi

#-------------------------------------------------------------------------------
# Process command line args
sec_def_reg=$1
sel_sec_reg=$2
begin_offset=$3
end_offset=$4

# Set defaults for offsets
if [ -z $begin_offset ]; then
    begin_offset=0
fi
if [ -z $end_offset ]; then
   end_offset=0
fi

#-------------------------------------------------------------------------------
# Store piped input stackoverflow.com/a/32365596
text="$(cat)"

#-------------------------------------------------------------------------------

# Find section headers, accoring to [section definition regex]
sections=$(echo "$text" | grep -n -e "$sec_def_reg")

# If no parameter specifying section regex, then just list found sections and exit
if [ -z "$sel_sec_reg" ]; then
    sections=$(echo "$text" | grep -e "$sec_def_reg")
    echo "$sections"
    exit 0
fi

# If multiple matches, section to print is ambiguous. Filter by section regex
# and exit
num_matched_sections=$(echo "$sections" | grep -ie "$sel_sec_reg" | wc -l)
if [ $num_matched_sections -gt 1 ]; then
    sections=$(echo "$text" | grep -e "$sec_def_reg" | grep -ie "$sel_sec_reg")
    echo "$sections"
    exit 1
fi

# Exit if zero matches
if [ $num_matched_sections -lt 1 ]; then
    exit 1
fi

#-------------------------------------------------------------------------------

# Find and print the appropriate section

selected_section_element=$(echo "$sections" | grep -ni -e "$sel_sec_reg" | cut -f1 -d:)
next_section_element=$(expr 1 + $selected_section_element)

ln_start=$(echo "$sections" | head -n $selected_section_element | tail -n1 | cut -f1 -d:)
ln_end=$(expr $(echo "$sections" | head -n $next_section_element | tail -n1 | cut -f1 -d:) - 1)

# If finding last section, choose last line as ln_end
if [ $ln_end -le $ln_start ]; then
  ln_end=$(echo "$text" | wc -l)
fi

# Adjust start and end line numbers if user specified --begin-offset or --end-offset
ln_start=$(bc <<< "$begin_offset + $ln_start")
ln_end=$(bc <<< "$end_offset + $ln_end")


# Print just the section span. https://stackoverflow.com/a/83347
echo "$text" | sed -n "${ln_start},${ln_end}p;$(expr 1 + ${ln_end})q"

